function [V_extra, domain, mat_sigma, spl, n_nodes] =...
    get_spline_voltage_laplacians(fem,pointlist,datadir,inl,ppn,diam,start_offset)

%% MOSTLY LEGACY AT THIS POINT, Probably superseeded by get_spline_voltages

%get_spline_voltage_laplacians.m Generate text file list of voltage values for NEURON communication
% fem is the comsol model object
% N is the number of diameters to simulate

geom = 'geom1';

pts = csvread([datadir pointlist]);
pts = pts';

% replaced by interparc 
%spl_func = cscvn(pts(:,1:end));

% how many times longer is a paranode than a node?
%diam = log(random('logn', 9, 0.2, 1, 1));
fib_len = arclength(pts(1,:),pts(2,:),pts(3,:),'spline');
n_nodes = floor((fib_len)./(diam*(inl+1)));
% how many nodes and paranodes does the axon have.

%s = linspace(spl_func.breaks(1),spl_func.breaks(end),ppn*n_nodes);
arc_node_length = 1./n_nodes;
arc_offset = start_offset.*1e-2.*arc_node_length;
s = linspace(0+arc_offset,1-arc_node_length+arc_offset,ppn*n_nodes);

spl = interparc(s,pts(1,:),pts(2,:),pts(3,:),'spline'); % a 3-d curve
spl = spl';
%spl = fnval(spl_func,s);

if 0 
%figure;
hold on
plot3(spl(1,:),spl(2,:),spl(3,:),'r*-');
get_geom_names;

%% View Geometry
nice_colors = parula(21);
ax = gca;

% Plot WM

%edges
mphviewselection(fem,geom,wm_edge, ...
    'entity', 'edge', ...
    'parent',ax, ...
    'facemode', 'off', ...
    'geommode', 'off', ...
    'edgemode', 'on', ...
    'edgecolorselected', [0 0 0], ...
    'edgecolor', [0 0 0] ...
    );

xlabel('x (um)');
ylabel('y (um)');
zlabel('z (um)');
print('-dpng',[datadir 'axon_view']);
end
V_extra = zeros(size(spl));
V_extra(1,:) = mphinterp(fem,'Vxx','coord',spl,...
    'Recover','pprint','Differential','on','Ext',1);%,...
%     'recover','pprint',...
%     'edim','domain',...
%     'Complexout','off',...
%     'Differential','off',...
%     'Evalmethod','harmonic',...
%     'Ext',0.1);
V_extra(2,:) = mphinterp(fem,'Vyy','coord',spl,...
    'Recover','pprint','Differential','on','Ext',.1);%,...
%     'recover','pprint',...
%     'edim','domain',...
%     'Complexout','off',...
%     'Differential','on',...
%     'Evalmethod','harmonic',...a
%     'Ext',0.1);
V_extra(3,:) = mphinterp(fem,'Vzz','coord',spl,...
    'Recover','pprint','Differential','on','Ext',.1);%,...
%     'recover','pprint',...
%     'edim','domain',...
%     'Complexout','off',...
%     'Differential','on',...
%     'Evalmethod','harmonic',...
%     'Ext',0.1);
% interpolate voltages from the COMSOL solution
domain = mphinterp(fem,'dom','coord',spl,...
    'Recover','ppr','Differential','on','Ext',.1);
% get domain names
mat_sigma = mphinterp(fem,'ec.sigmaxx','coord',spl);
end
